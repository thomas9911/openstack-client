# these are commands only for the specified resource

start:
  aliases: []
  help: start the resource
  resources:
    - resource: servers
      help: start the server
      url_parameter: action
      requires_id: true
      body_name: "os-start"
      post_parameters: []
stop:
  aliases: []
  help: stop the resource
  resources:
    - resource: servers
      help: stop the server
      url_parameter: action
      requires_id: true
      body_name: "os-stop"
      post_parameters: []
suspend:
  aliases: []
  help: suspend the resource
  resources:
    - resource: servers
      help: suspend the server
      url_parameter: action
      requires_id: true
      body_name: "suspend"
      post_parameters: []
output:
  aliases: []
  help: get the console output from the resource
  resources:
    - resource: servers
      help: get the console output from the server
      url_parameter: action
      requires_id: true
      body_name: "os-getConsoleOutput"
      post_parameters:
        - name: length
          default: null
          help: The number of lines to fetch from the end of console log. All lines will be returned if this is not specified.
remote_console:
  aliases: []
  help: create a remote console to resource
  resources:
    - resource: servers
      help: create a remote console to server
      url_parameter: "servers/{{ id }}/remote-consoles"
      requires_id: true
      body_name: "remote_console"
      post_parameters:
        - name: protocol
          required: true
          help: The protocol of remote console. The valid values are vnc, spice, rdp, serial and mks. The protocol mks is added since Microversion 2.8.
        - name: type
          required: true
          help: The type of remote console. The valid values are novnc, xvpvnc, rdp-html5, spice-html5, serial, and webmks. The type webmks is added since Microversion 2.8.
        - name: nova-version
          path: X-OpenStack-Nova-API-Version
          required: true
          help: "the nova version to use"
          placement: header
          default: "2.8"
copy:
  aliases: []
  help: copy instance from location to destination
  resources:
    - resource: objects
      help: copy object to other destination
      http_method: copy
      url_parameter: "{{ container }}/{{ name }}"
      requires_id: false
      body_name: ""
      post_parameters:
      - name: from
        path: name
        required: true
        help: the object to copy.
        placement: path
      - name: to
        path: Destination
        required: true
        help: "the destination to copy to, including the container name. example: container/object"
        placement: header
      - name: container
        required: true
        help: name of the container to use.
        placement: path
      - name: api-format
        default: ""
        hidden: true
        placement: query
upload:
  aliases: []
  help: upload file to resource
  resources:
    - resource: objects
      help: upload file to object store
      http_method: add
      url_parameter: "{{ container }}/{{ name }}"
      requires_id: false
      body_name: ""
      post_parameters:
      - name: file
        required: true
        help: the path to the file to upload.
        placement: path
      - name: name
        required: false
        help: a name to give object (Optional).
        placement: path
      - name: container
        required: true
        help: name of the container to use.
        placement: path
      - name: parts
        required: false
        help: amount of parts to split the file in before uploading. Enables dynamic large objects.
      - name: skip-parts
        required: false
        help: skip parts when uploading large files (should be used with the 'parts' argument).
        default: "0"
      - name: api-format
        default: ""
        hidden: true
        placement: query
    - resource: containers
      help: create a container
      http_method: add
      url_parameter: "{{ name }}"
      requires_id: false
      body_name: ""
      is_multipart: true
      post_parameters:
      - name: name
        required: true
        help: a name to give object (Optional).
download:
  aliases: []
  help: download file from resource
  resources:
    - resource: objects
      help: download file from object store
      http_method: show
      url_parameter: "{{ container }}/{{ name }}"
      requires_id: false
      body_name: ""
      post_parameters:
      - name: file
        required: true
        help: the path to the file to upload.
      - name: name
        required: false
        help: a name to give object (Optional).
      - name: container
        required: true
        help: name of the container to use.
      - name: api-format
        default: ""
        hidden: true