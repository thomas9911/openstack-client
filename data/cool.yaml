name: openstack-client
settings:
- ArgRequiredElseHelp
args:
- os-cloud:
    long: os-cloud
    help: use this as the cloud name from the clouds.yaml
    takes_value: true
subcommands:
- show:
    about: shows the given resource.
    visible_aliases:
    - get
    case_insensitive: true
    index: 1
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request
    subcommands:
    - flavors:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: &id001
            help: id of object that will be used
            required: true
            index: 1
        visible_aliases:
        - flavor
    - keypairs:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - keypair
    - limits:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - limit
    - server-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - server-group
    - servers:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - server
    - credentials:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - credential
    - domains:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - domain
    - groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - group
    - projects:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - project
    - users:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - user
    - images:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - image
    - address-scopes:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - address-scope
    - availability-zones:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - availability-zone
    - floating-ips:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - floating-ip
    - networks:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - network
    - ports:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - port
    - routers:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - router
    - security-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - security-group
    - security-groups-rules:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - security-groups-rule
    - subnets:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - subnet
    - attachments:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - attachment
    - backups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - backup
    - snapshots:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - snapshot
    - volumes:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - volume
- list:
    about: lists the given resource.
    visible_aliases:
    - ls
    case_insensitive: true
    index: 1
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request
    subcommands:
    - flavors:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - flavor
    - keypairs:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - keypair
    - limits:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - limit
    - server-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - server-group
    - servers:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - server
    - credentials:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - credential
    - domains:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - domain
    - groups:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - group
    - projects:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - project
    - users:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - user
    - images:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - image
    - address-scopes:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - address-scope
    - availability-zones:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - availability-zone
    - floating-ips:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - floating-ip
    - networks:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - network
    - ports:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - port
    - routers:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - router
    - security-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - security-group
    - security-groups-rules:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - security-groups-rule
    - subnets:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - subnet
    - attachments:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - attachment
    - backups:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - backup
    - snapshots:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - snapshot
    - volumes:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - volume
- new:
    about: create a new item from the given resource.
    visible_aliases:
    - create
    case_insensitive: true
    index: 1
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request
    subcommands:
    - flavors:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - flavor
    - keypairs:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - name:
            help: A name for the keypair which will be used to reference it later.
            required: true
            long: name
            takes_value: true
            multiple: false
        - public_key:
            help: The public ssh key to import. If you omit this value, a keypair
              is generated for you. (Optional)
            long: public_key
            takes_value: true
            multiple: false
        - type:
            help: The type of the keypair. Allowed values are ssh or x509. (Optional)
            long: type
            takes_value: true
            multiple: false
        - user_id:
            help: The user_id for a keypair. This allows administrative users to upload
              keys for other users than themselves. (Optional)
            long: user_id
            takes_value: true
            multiple: false
        visible_aliases:
        - keypair
    - limits:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - limit
    - server-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - server-group
    - servers:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - name:
            help: The server name.
            required: true
            long: name
            takes_value: true
            multiple: false
        - flavor:
            help: The flavor reference, as an ID (including a UUID) or full URL, for
              the flavor for your server instance.
            required: true
            long: flavor
            takes_value: true
            multiple: false
        - image:
            help: The UUID of the image to use for your server instance. This is not
              required in case of boot from volume. In all other cases it is required
              and must be a valid UUID otherwise API will return 400. (Optional)
            long: image
            takes_value: true
            multiple: false
        - access-ipv4:
            help: IPv4 address that should be used to access this server. (Optional)
            long: access-ipv4
            takes_value: true
            multiple: false
        - network-id:
            help: To provision the server instance with a NIC for a network, specify
              the UUID of the network in the uuid attribute in a networks object.
              Required if you omit the port attribute. (Optional)
            long: network-id
            takes_value: true
            multiple: false
        visible_aliases:
        - server
    - credentials:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - project_id:
            help: The ID for the project.
            required: true
            long: project_id
            takes_value: true
            multiple: false
        - user_id:
            help: The ID of the user who owns the credential.
            required: true
            long: user_id
            takes_value: true
            multiple: false
        - type:
            help: The credential type, such as ec2 or cert. The implementation determines
              the list of supported types.
            long: type
            takes_value: true
            multiple: false
            default_value: ec2
        visible_aliases:
        - credential
    - domains:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - domain
    - groups:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - group
    - projects:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - project
    - users:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - user
    - images:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - image
    - address-scopes:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - address-scope
    - availability-zones:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - availability-zone
    - floating-ips:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - name:
            required: true
            long: name
            takes_value: true
            multiple: false
        - amount:
            long: amount
            takes_value: true
            multiple: false
        - cheese:
            long: cheese
            takes_value: true
            multiple: true
        visible_aliases:
        - floating-ip
    - networks:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - network
    - ports:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - port
    - routers:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - router
    - security-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - security-group
    - security-groups-rules:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - security-groups-rule
    - subnets:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - subnet
    - attachments:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - attachment
    - backups:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - backup
    - snapshots:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - snapshot
    - volumes:
        index: 1
        case_insensitive: true
        about: resource A
        args: []
        visible_aliases:
        - volume
- delete:
    about: delete an item from the given resource.
    visible_aliases:
    - remove
    - rm
    case_insensitive: true
    index: 1
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request
    subcommands:
    - flavors:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - flavor
    - keypairs:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - keypair
    - limits:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - limit
    - server-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - server-group
    - servers:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - server
    - credentials:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - credential
    - domains:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - domain
    - groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - group
    - projects:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - project
    - users:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - user
    - images:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - image
    - address-scopes:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - address-scope
    - availability-zones:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - availability-zone
    - floating-ips:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - floating-ip
    - networks:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - network
    - ports:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - port
    - routers:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - router
    - security-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - security-group
    - security-groups-rules:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - security-groups-rule
    - subnets:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - subnet
    - attachments:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - attachment
    - backups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - backup
    - snapshots:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - snapshot
    - volumes:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - volume
- patch:
    about: update an item from the given resource.
    visible_aliases:
    - update
    case_insensitive: true
    index: 1
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request
    subcommands:
    - flavors:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - flavor
    - keypairs:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - name:
            help: A name for the keypair which will be used to reference it later.
            required: true
            long: name
            takes_value: true
            multiple: false
        - public_key:
            help: The public ssh key to import. If you omit this value, a keypair
              is generated for you. (Optional)
            long: public_key
            takes_value: true
            multiple: false
        - type:
            help: The type of the keypair. Allowed values are ssh or x509. (Optional)
            long: type
            takes_value: true
            multiple: false
        - user_id:
            help: The user_id for a keypair. This allows administrative users to upload
              keys for other users than themselves. (Optional)
            long: user_id
            takes_value: true
            multiple: false
        - id: *id001
        visible_aliases:
        - keypair
    - limits:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - limit
    - server-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - server-group
    - servers:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - name:
            help: The server name.
            required: true
            long: name
            takes_value: true
            multiple: false
        - flavor:
            help: The flavor reference, as an ID (including a UUID) or full URL, for
              the flavor for your server instance.
            required: true
            long: flavor
            takes_value: true
            multiple: false
        - image:
            help: The UUID of the image to use for your server instance. This is not
              required in case of boot from volume. In all other cases it is required
              and must be a valid UUID otherwise API will return 400. (Optional)
            long: image
            takes_value: true
            multiple: false
        - access-ipv4:
            help: IPv4 address that should be used to access this server. (Optional)
            long: access-ipv4
            takes_value: true
            multiple: false
        - network-id:
            help: To provision the server instance with a NIC for a network, specify
              the UUID of the network in the uuid attribute in a networks object.
              Required if you omit the port attribute. (Optional)
            long: network-id
            takes_value: true
            multiple: false
        - id: *id001
        visible_aliases:
        - server
    - credentials:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - project_id:
            help: The ID for the project.
            required: true
            long: project_id
            takes_value: true
            multiple: false
        - user_id:
            help: The ID of the user who owns the credential.
            required: true
            long: user_id
            takes_value: true
            multiple: false
        - type:
            help: The credential type, such as ec2 or cert. The implementation determines
              the list of supported types.
            long: type
            takes_value: true
            multiple: false
            default_value: ec2
        - id: *id001
        visible_aliases:
        - credential
    - domains:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - domain
    - groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - group
    - projects:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - project
    - users:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - user
    - images:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - image
    - address-scopes:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - address-scope
    - availability-zones:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - availability-zone
    - floating-ips:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - name:
            required: true
            long: name
            takes_value: true
            multiple: false
        - amount:
            long: amount
            takes_value: true
            multiple: false
        - cheese:
            long: cheese
            takes_value: true
            multiple: true
        - id: *id001
        visible_aliases:
        - floating-ip
    - networks:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - network
    - ports:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - port
    - routers:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - router
    - security-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - security-group
    - security-groups-rules:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - security-groups-rule
    - subnets:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - subnet
    - attachments:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - attachment
    - backups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - backup
    - snapshots:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - snapshot
    - volumes:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - volume
- add:
    about: add a propety from an item from the given resource.
    visible_aliases:
    - put
    - append
    case_insensitive: true
    index: 1
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request
    subcommands:
    - flavors:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - flavor
    - keypairs:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - name:
            help: A name for the keypair which will be used to reference it later.
            required: true
            long: name
            takes_value: true
            multiple: false
        - public_key:
            help: The public ssh key to import. If you omit this value, a keypair
              is generated for you. (Optional)
            long: public_key
            takes_value: true
            multiple: false
        - type:
            help: The type of the keypair. Allowed values are ssh or x509. (Optional)
            long: type
            takes_value: true
            multiple: false
        - user_id:
            help: The user_id for a keypair. This allows administrative users to upload
              keys for other users than themselves. (Optional)
            long: user_id
            takes_value: true
            multiple: false
        - id: *id001
        visible_aliases:
        - keypair
    - limits:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - limit
    - server-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - server-group
    - servers:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - name:
            help: The server name.
            required: true
            long: name
            takes_value: true
            multiple: false
        - flavor:
            help: The flavor reference, as an ID (including a UUID) or full URL, for
              the flavor for your server instance.
            required: true
            long: flavor
            takes_value: true
            multiple: false
        - image:
            help: The UUID of the image to use for your server instance. This is not
              required in case of boot from volume. In all other cases it is required
              and must be a valid UUID otherwise API will return 400. (Optional)
            long: image
            takes_value: true
            multiple: false
        - access-ipv4:
            help: IPv4 address that should be used to access this server. (Optional)
            long: access-ipv4
            takes_value: true
            multiple: false
        - network-id:
            help: To provision the server instance with a NIC for a network, specify
              the UUID of the network in the uuid attribute in a networks object.
              Required if you omit the port attribute. (Optional)
            long: network-id
            takes_value: true
            multiple: false
        - id: *id001
        visible_aliases:
        - server
    - credentials:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - project_id:
            help: The ID for the project.
            required: true
            long: project_id
            takes_value: true
            multiple: false
        - user_id:
            help: The ID of the user who owns the credential.
            required: true
            long: user_id
            takes_value: true
            multiple: false
        - type:
            help: The credential type, such as ec2 or cert. The implementation determines
              the list of supported types.
            long: type
            takes_value: true
            multiple: false
            default_value: ec2
        - id: *id001
        visible_aliases:
        - credential
    - domains:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - domain
    - groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - group
    - projects:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - project
    - users:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - user
    - images:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - image
    - address-scopes:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - address-scope
    - availability-zones:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - availability-zone
    - floating-ips:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - name:
            required: true
            long: name
            takes_value: true
            multiple: false
        - amount:
            long: amount
            takes_value: true
            multiple: false
        - cheese:
            long: cheese
            takes_value: true
            multiple: true
        - id: *id001
        visible_aliases:
        - floating-ip
    - networks:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - network
    - ports:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - port
    - routers:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - router
    - security-groups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - security-group
    - security-groups-rules:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - security-groups-rule
    - subnets:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - subnet
    - attachments:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - attachment
    - backups:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - backup
    - snapshots:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - snapshot
    - volumes:
        index: 1
        case_insensitive: true
        about: resource A
        args:
        - id: *id001
        visible_aliases:
        - volume
- call:
    about: call an endpoint that is not supported by the commandline interface
    visible_aliases:
    - do
    - raw
    case_insensitive: true
    index: 1
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request
    - method:
        help: http method to use
        takes_value: true
        possible_values:
        - POST
        - GET
        - PATCH
        - DELETE
        - PUT
        - OPTIONS
        - HEAD
        - CONNECT
        - TRACE
        required: true
    - type:
        help: the openstack type to use, such as 'compute' or 'image'
        takes_value: true
        required: true
    - endpoint:
        help: endpoint or path to send the call to
        takes_value: true
        required: true
    - body:
        help: 'a json object as a string, for example "{\"test\": \"test\"}"'
        takes_value: true
        value_name: BODY
- start:
    about: start the resource
    visible_aliases: []
    case_insensitive: true
    index: 1
    subcommands:
    - servers:
        index: 1
        case_insensitive: true
        about: start the server
        args:
        - id: *id001
        visible_aliases:
        - server
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request
- stop:
    about: stop the resource
    visible_aliases: []
    case_insensitive: true
    index: 1
    subcommands:
    - servers:
        index: 1
        case_insensitive: true
        about: stop the server
        args:
        - id: *id001
        visible_aliases:
        - server
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request
- suspend:
    about: suspend the resource
    visible_aliases: []
    case_insensitive: true
    index: 1
    subcommands:
    - servers:
        index: 1
        case_insensitive: true
        about: suspend the server
        args:
        - id: *id001
        visible_aliases:
        - server
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request
- output:
    about: get the console output from the resource
    visible_aliases: []
    case_insensitive: true
    index: 1
    subcommands:
    - servers:
        index: 1
        case_insensitive: true
        about: get the console output from the server
        args:
        - id: *id001
        - length:
            help: The number of lines to fetch from the end of console log. All lines
              will be returned if this is not specified.
            long: length
            multiple: false
            takes_value: true
        visible_aliases:
        - server
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request
- remote_console:
    about: create a remote console to resource
    visible_aliases: []
    case_insensitive: true
    index: 1
    subcommands:
    - servers:
        index: 1
        case_insensitive: true
        about: create a remote console to server
        args:
        - id: *id001
        - protocol:
            help: The protocol of remote console. The valid values are vnc, spice,
              rdp, serial and mks. The protocol mks is added since Microversion 2.8.
            required: true
            long: protocol
            multiple: false
            takes_value: true
        - type:
            help: The type of remote console. The valid values are novnc, xvpvnc,
              rdp-html5, spice-html5, serial, and webmks. The type webmks is added
              since Microversion 2.8.
            required: true
            long: type
            multiple: false
            takes_value: true
        visible_aliases:
        - server
    args:
    - dry-run:
        long: dry-run
        help: prints the post body of the request, does not send the request

