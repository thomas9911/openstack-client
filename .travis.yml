language: rust
matrix:
  include:
    - os: linux
      dist: xenial
      rust: stable
    - os: linux
      dist: xenial
      rust: nightly
    - os: osx
      rust: stable
    - os: osx
      rust: nightly
    - os: windows
      rust: stable
  allow_failures:
    - rust: nightly
  fast_finish: true
cache: cargo
before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update                ; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install curl libcurl3 ; fi
script:
  - cargo build --release --verbose
  - cargo test --release --verbose
deploy:
  skip_cleanup: true
  provider: script
  # script: ls && pwd && ls /home/travis/build/thomas9911/openstack-client/target/release
  # script: RUST_VERSION=$(rustc --version | sed 's/rustc //' | sed 's/(.*)//' | tr -d [:space:]) && RUST_TOOLCHAIN=$(rustup show active-toolchain | sed 's/(default)//' | tr -d [:space:]) && CLIENT_VERSION=$(/home/travis/build/thomas9911/openstack-client/target/release/openstack-client --version | sed 's/openstack-client //' | tr -d [:space:]) && strip /home/travis/build/thomas9911/openstack-client/target/release/openstack-client && /home/travis/build/thomas9911/openstack-client/target/release/openstack-client upload object --file /home/travis/build/thomas9911/openstack-client/target/release/openstack-client --name $CLIENT_VERSION/$TRAVIS_OS_NAME/$RUST_TOOLCHAIN/$RUST_VERSION/openstack-client --container rustci
  script: bash .deploy.sh
  on:
    all_branches: true
